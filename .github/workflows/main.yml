name: Main

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  test:

    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '23.x'
          cache: 'npm'

      - name: Build
        run: npm ci

      - name: Test
        run: npm test

  generate-screenshots:
    name: Generate Screenshots
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Cache Python Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-os:${{ matrix.os }}-python:3.12-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements-dev.txt') }}

      - name: Install Dependencies
        shell: bash
        run: pip3 install -r requirements-dev.txt

      - name: Run Server Docker Container
        run: docker run --rm --tty --publish 8080:80 --name autograder-server-container edulinq/autograder-server-prebuilt:latest

      - name: Start Local Server
        run: docker exec autograder-server-container ls

      # - name: Generate Image Artifacts
      #   run: ./scripts/generate_screenshots.py
      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: site-screenshots
      #     path: resources/*.png

      - name: Stop Server Container
        if: always()
        run: docker stop autograder-server-container && docker rm autograder-server-container
